import datatypes from "customerCore.data" as CustomerCoreAPIData
import technology from "OpenApi.technology" as OpenApi

@technology(OpenApi)
public functional microservice com.lakesidemutual.customercore.CustomerCore {
    interface cityReferenceDataHolder {
        ---
        **Type** GET Operation for path /cities/{postalCode}
        **Summary** Get the cities for a particular postal code.
        **Description**
        @required returnValue [INSERT PARAMETER DESC HERE]
        ---
        @endpoints(OpenApi::_protocols.rest:"/cities/{postalCode}";)
        @OpenApi::_aspects.GetMapping
        getCitiesForPostalCodeUsingGET( sync in postalcode : string,  sync out returnValue : CustomerCoreAPIData::v100.CustomerCoreAPI.CitiesResponseDto);
    }
    interface customerCoreFrontendController {
        ---
        **Type** GET Operation for path /customercorefe
        **Summary** getCustomerById
        **Description**
        @required returnValue [INSERT PARAMETER DESC HERE]
        ---
        @endpoints(OpenApi::_protocols.rest:"/customercorefe";)
        @OpenApi::_aspects.GetMapping
        getCustomerByIdUsingGET( sync in id : string,  sync out returnValue : string);
    }
    interface customerInformationHolder {
        ---
        **Type** GET Operation for path /customers
        **Summary** Get all customers in pages of 10 entries per page.
        **Description**
        @required ^fields [INSERT PARAMETER DESC HERE]
        @required filter [INSERT PARAMETER DESC HERE]
        @required limit [INSERT PARAMETER DESC HERE]
        @required offset [INSERT PARAMETER DESC HERE]
        @required returnValue [INSERT PARAMETER DESC HERE]
        ---
        @endpoints(OpenApi::_protocols.rest:"/customers";)
        @OpenApi::_aspects.GetMapping
        getCustomersUsingGET( sync in ^fields : string,  sync in filter : string,  sync in limit : int,  sync in offset : int,  sync out returnValue : CustomerCoreAPIData::v100.CustomerCoreAPI.PaginatedCustomerResponseDto);
        ---
        **Type** POST Operation for path /customers
        **Summary** Create a new customer.
        **Description**
        @required requestBody [INSERT PARAMETER DESC HERE]
        @required returnValue [INSERT PARAMETER DESC HERE]
        ---
        @endpoints(OpenApi::_protocols.rest:"/customers";)
        @OpenApi::_aspects.PostMapping
        createCustomerUsingPOST(@OpenApi::_aspects.RequestBody sync in requestBody : CustomerCoreAPIData::v100.CustomerCoreAPI.CustomerProfileUpdateRequestDto,  sync out returnValue : CustomerCoreAPIData::v100.CustomerCoreAPI.CustomerResponseDto);
        ---
        **Type** PUT Operation for path /customers/{customerId}
        **Summary** Update the profile of the customer with the given customer id
        **Description**
        @required requestBody [INSERT PARAMETER DESC HERE]
        @required returnValue [INSERT PARAMETER DESC HERE]
        ---
        @endpoints(OpenApi::_protocols.rest:"/customers/{customerId}";)
        @OpenApi::_aspects.PutMapping
        updateCustomerUsingPUT( sync in customerid : string, @OpenApi::_aspects.RequestBody sync in requestBody : CustomerCoreAPIData::v100.CustomerCoreAPI.CustomerProfileUpdateRequestDto,  sync out returnValue : CustomerCoreAPIData::v100.CustomerCoreAPI.CustomerResponseDto);
        ---
        **Type** PUT Operation for path /customers/{customerId}/address
        **Summary** Change a customer's address.
        **Description**
        @required requestBody [INSERT PARAMETER DESC HERE]
        @required returnValue [INSERT PARAMETER DESC HERE]
        ---
        @endpoints(OpenApi::_protocols.rest:"/customers/{customerId}/address";)
        @OpenApi::_aspects.PutMapping
        changeAddressUsingPUT( sync in customerid : string, @OpenApi::_aspects.RequestBody sync in requestBody : CustomerCoreAPIData::v100.CustomerCoreAPI.AddressDto,  sync out returnValue : CustomerCoreAPIData::v100.CustomerCoreAPI.AddressDto);
        ---
        **Type** GET Operation for path /customers/{ids}
        **Summary** Get a specific set of customers.
        **Description**
        @required ^fields [INSERT PARAMETER DESC HERE]
        @required returnValue [INSERT PARAMETER DESC HERE]
        ---
        @endpoints(OpenApi::_protocols.rest:"/customers/{ids}";)
        @OpenApi::_aspects.GetMapping
        getCustomerUsingGET( sync in ^fields : string,  sync in ids : string,  sync out returnValue : CustomerCoreAPIData::v100.CustomerCoreAPI.CustomersResponseDto);
    }
}